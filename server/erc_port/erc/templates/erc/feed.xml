<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-29T23:28:07+05:30</updated><id>http://localhost:4000/</id><title type="html">Electronics and Robotics Club, IIT Bombay</title><subtitle>A place for tinkerers and the sort!</subtitle><entry><title type="html">Eagle Tutorial for absolute beginners.</title><link href="http://localhost:4000/blog/eagle_beginner/" rel="alternate" type="text/html" title="Eagle Tutorial for absolute beginners." /><published>2018-07-18T00:00:00+05:30</published><updated>2018-07-18T00:00:00+05:30</updated><id>http://localhost:4000/blog/eagle-beginners-tutorial</id><content type="html" xml:base="http://localhost:4000/blog/eagle_beginner/">&lt;p&gt;&lt;strong&gt;Eagle&lt;/strong&gt; is a computer-aided circuit-designing,PCB designing and a circuit simulation software developed by &lt;strong&gt;Autodesk&lt;/strong&gt;.I hope you will enjoy working with this light,easy-to-use and download yet useful application.&lt;/p&gt;

&lt;h1&gt;TABLE OF CONTENTS&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-download-eagle&quot; id=&quot;markdown-toc-how-to-download-eagle&quot;&gt;HOW TO DOWNLOAD EAGLE?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#making-a-new-project&quot; id=&quot;markdown-toc-making-a-new-project&quot;&gt;MAKING A NEW PROJECT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#important-commands-neededdeletemoverotategroup&quot; id=&quot;markdown-toc-important-commands-neededdeletemoverotategroup&quot;&gt;IMPORTANT COMMANDS NEEDED:DELETE,MOVE,ROTATE,GROUP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#special-commands-for-schematics&quot; id=&quot;markdown-toc-special-commands-for-schematics&quot;&gt;SPECIAL COMMANDS FOR SCHEMATICS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#exporting-the-file&quot; id=&quot;markdown-toc-exporting-the-file&quot;&gt;EXPORTING THE FILE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;how-to-download-eagle&quot;&gt;HOW TO DOWNLOAD EAGLE?&lt;/h2&gt;

&lt;p&gt;You can download the software from &lt;u&gt;&lt;a href=&quot;https://www.autodesk.com/products/eagle/free-download&quot;&gt;here.&lt;/a&gt;&lt;/u&gt;
The latest version is just 115Mb and installer gets downloaded in minutes.
Run the installer and it gets downloaded quite easily.&lt;/p&gt;

&lt;h2 id=&quot;making-a-new-project&quot;&gt;MAKING A NEW PROJECT&lt;/h2&gt;

&lt;p&gt;Open Eagle.
Then in control panel(which opens)-&amp;gt;File-&amp;gt;New-&amp;gt;Project.Name the project
Open up a new schematic using File-&amp;gt;New-&amp;gt;Schematic and then save it in the project directory using File-&amp;gt;save as in schematic window with .sch extension.&lt;/p&gt;

&lt;h3 id=&quot;working-with-the-schematic&quot;&gt;Working with the schematic:&lt;/h3&gt;

&lt;h4 id=&quot;step-1&quot;&gt;Step 1:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;big&gt;Adding components &lt;/big&gt;:&lt;/p&gt;

    &lt;p&gt;There are inbuilt libraries in eagle from which components can directly be copied.Edit-&amp;gt;ADD or directly click on ADD symbol in the toolbar to the left.To search for any keyword in the standard libraries :search  enter &lt;em&gt;keyword&lt;/em&gt;.The * acts as a wildcard entry,it is absolutely necessary if we don’t have the exact name. Eg. if we want IC 555 timer we may search &lt;em&gt;555&lt;/em&gt; and then get the required LM555 ic.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/eagle_beginner/1.jpg&quot; alt=&quot;Adding a component&quot; /&gt;
&lt;small&gt;
– Click “ok”
– Then right click to rotate.
– Position by moving the mouse.
– Left click to place.
&lt;/small&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;big&gt;Adding more libraries to the ADD feature:
Visit &lt;u&gt;&lt;a href=&quot;https://www.diymodules.org/eagle-libraries &quot;&gt;this website&lt;/a&gt;&lt;/u&gt; for libraries for libraries&lt;/big&gt;&lt;/p&gt;

    &lt;p&gt;&lt;small&gt;Follow the  instructions from the given &lt;u&gt;&lt;a href=&quot;http://www.instructables.com/id/Adding-a-Library-to-Eagle-CAD/&quot;&gt;link&lt;/a&gt;&lt;/u&gt; to USE it:
This will make the library elements appear as we use the ADD option.
&lt;/small&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step-2&quot;&gt;Step 2:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Make the connections using Draw-&amp;gt;Net&lt;/li&gt;
  &lt;li&gt;Use a net instead of wire for electrical connections.
(Nets will automatically form junctions when terminated on pins or other nets. Wire don’t make termination dots and wont auto-terminate the connection.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;important-commands-neededdeletemoverotategroup&quot;&gt;IMPORTANT COMMANDS NEEDED:DELETE,MOVE,ROTATE,GROUP&lt;/h2&gt;

&lt;p&gt;In the toolbox to the left you will find all important commands.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;&lt;big&gt;DELETE:&lt;/big&gt;&lt;/b&gt;
    &lt;ol&gt;
      &lt;li&gt;Click on delete tool in the toolbox to the left.&lt;/li&gt;
      &lt;li&gt;For every object in eagle(except for nets and buses) you will find a plus sign(crosshair).&lt;/li&gt;
      &lt;li&gt;Hover to the crosshair,left click and the object gets deleted.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&lt;big&gt;MOVE:&lt;/big&gt;&lt;/b&gt;
    &lt;ol&gt;
      &lt;li&gt;Click on move tool in the toolbox to the left.&lt;/li&gt;
      &lt;li&gt;For every object in eagle(except for nets and buses) you will find a plus sign(crosshair).&lt;/li&gt;
      &lt;li&gt;Hover to the crosshair,left click ,move to desired location,left click again to place.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&lt;big&gt;ROTATE:&lt;/big&gt;&lt;/b&gt;
    &lt;ol&gt;
      &lt;li&gt;Hovering over the crosswire with rotate tool selected and left clicking rotates the object.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&lt;big&gt;GROUP:&lt;/big&gt;&lt;/b&gt;
    &lt;ol&gt;
      &lt;li&gt;Use the group tool.&lt;/li&gt;
      &lt;li&gt;Draw polygon covering group elements.Right click to complete it.&lt;/li&gt;
      &lt;li&gt;Use the command delete or move or rotate  +ctrl+right click to perform the action on the group.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&lt;big&gt;ERC (Electrical Rule Check)&lt;/big&gt;&lt;/b&gt;
    &lt;ol&gt;
      &lt;li&gt;This command in toolbox, helps to check electrical errors.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;There are many more useful tools in the toolbox.&lt;/center&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/eagle_beginner/2.jpg&quot; alt=&quot;Commands under Edit option&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;special-commands-for-schematics&quot;&gt;SPECIAL COMMANDS FOR SCHEMATICS&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TEXT&lt;/td&gt;
      &lt;td&gt;Insert Text&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Junction&lt;/td&gt;
      &lt;td&gt;Place connection point&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INVOKE&lt;/td&gt;
      &lt;td&gt;Add certain ‘gate’ from a placed device&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LABEL&lt;/td&gt;
      &lt;td&gt;Provide label to bus or net&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GATESWAP&lt;/td&gt;
      &lt;td&gt;Swap equivalent ‘gates’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PINSWAP&lt;/td&gt;
      &lt;td&gt;Swap equivalent pins&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BOARD&lt;/td&gt;
      &lt;td&gt;Create a board from a schematic&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Click on them. &lt;br /&gt;
Directions to use each are provided in eagle at the bottom.
&lt;img src=&quot;http://localhost:4000/assets/blog/eagle_beginner/3.jpg&quot; alt=&quot;Commands under draw option&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;exporting-the-file&quot;&gt;EXPORTING THE FILE&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;big&gt;&lt;b&gt;As pdf&lt;/b&gt;&lt;/big&gt;
( in schematic window)
    &lt;ol&gt;
      &lt;li&gt;Chose Print to file(PDF) in Printer.&lt;/li&gt;
      &lt;li&gt;Chose the location of output PDF file in Output file option.&lt;/li&gt;
      &lt;li&gt;Click OK and we’re done.
&lt;img src=&quot;http://localhost:4000/assets/blog/eagle_beginner/4.jpg&quot; alt=&quot;export as pdf&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;big&gt;&lt;b&gt;As Image&lt;/b&gt;&lt;/big&gt;
    &lt;ol&gt;
      &lt;li&gt;File-&amp;gt;Export-&amp;gt;Image&lt;/li&gt;
      &lt;li&gt;In the dialog box that appears,&lt;/li&gt;
      &lt;li&gt;Chose the location and name of the imagederised and click Ok.
&lt;img src=&quot;http://localhost:4000/assets/blog/eagle_beginner/5.jpg&quot; alt=&quot;export as image&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Time to make some good circuit design using eagle. Happy tinkering!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><category term="Eagle" /><category term="beginners" /><category term="Tutorial" /><summary type="html">Eagle is a computer-aided circuit-designing,PCB designing and a circuit simulation software developed by Autodesk.</summary></entry><entry><title type="html">BLAH</title><link href="http://localhost:4000/events/blah" rel="alternate" type="text/html" title="BLAH" /><published>2018-03-01T00:00:00+05:30</published><updated>2018-03-01T00:00:00+05:30</updated><id>http://localhost:4000/events/blah</id><content type="html" xml:base="http://localhost:4000/events/blah"></content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="blah" /><summary type="html">Talking about different topics</summary></entry><entry><title type="html">XLR8</title><link href="http://localhost:4000/events/xlr8" rel="alternate" type="text/html" title="XLR8" /><published>2018-02-01T00:00:00+05:30</published><updated>2018-02-01T00:00:00+05:30</updated><id>http://localhost:4000/events/xlr8</id><content type="html" xml:base="http://localhost:4000/events/xlr8">&lt;p&gt;XLR8 is the the first Technical Competition of the Academic year.  The primary task is to build a manually controlled bot capable of negotiating different kinds of obstacles in its path in stipulated amount of time. The team which completes the task in minimum amount of time wins. There are also prizes for other aspects of the competition.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;font color=&quot;f44336&quot;&gt;Don’t get intimidated by seeing these components. We’ll have sessions arranged before the competition to guide you through every step of the competition. Mentors will also be allotted to help and guide you.&lt;/font&gt;&lt;/p&gt;

&lt;h1 id=&quot;register-link&quot;&gt;REGISTER LINK&lt;/h1&gt;
&lt;p&gt;Register here&lt;/p&gt;

&lt;h1 id=&quot;last-years-problem-statement&quot;&gt;LAST YEAR’S PROBLEM STATEMENT&lt;/h1&gt;
&lt;p&gt;Shown below is last year’s Problem Statement.&lt;/p&gt;
&lt;center&gt;
&lt;iframe src=&quot;http://localhost:4000/assets/event/XLR8/problem_statement.pdf&quot; width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;p&gt;The essence of the Problem Statement would remain intact albeit some tweaks can be introduced&lt;/p&gt;

&lt;h1 id=&quot;link-to-the-tutorial&quot;&gt;LINK TO THE TUTORIAL&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:4000/blog/XLR8&quot;&gt; CLICK HERE &lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;demo-video&quot;&gt;DEMO VIDEO&lt;/h1&gt;
&lt;video width=&quot;800&quot; height=&quot;600&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;http://localhost:4000/assets/event/XLR8/xlr8_demo.mp4&quot; type=&quot;video/mp4&quot; /&gt;
Your browser does not support the video tag.
&lt;/video&gt;</content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="xlr8" /><category term="event" /><summary type="html">Dive into the World of Technology!</summary></entry><entry><title type="html">MAZE RUNNER &amp;amp; LINE FOLLOWER</title><link href="http://localhost:4000/events/maze_runner" rel="alternate" type="text/html" title="MAZE RUNNER &amp; LINE FOLLOWER" /><published>2018-01-08T00:00:00+05:30</published><updated>2018-01-08T00:00:00+05:30</updated><id>http://localhost:4000/events/maze-runner</id><content type="html" xml:base="http://localhost:4000/events/maze_runner"></content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="maze" /><category term="runner" /><category term="line" /><category term="follower" /><summary type="html">Teaching the basic mechanics of robotics!</summary></entry><entry><title type="html">Arduino Workshop</title><link href="http://localhost:4000/events/arduino_workshop" rel="alternate" type="text/html" title="Arduino Workshop" /><published>2017-10-07T00:00:00+05:30</published><updated>2017-10-07T00:00:00+05:30</updated><id>http://localhost:4000/events/arduino-workshop</id><content type="html" xml:base="http://localhost:4000/events/arduino_workshop"></content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="arduino" /><category term="workshop" /><summary type="html">Teaching the basic mechanics of robotics!</summary></entry><entry><title type="html">XLR8 2017</title><link href="http://localhost:4000/events/xlr82017" rel="alternate" type="text/html" title="XLR8 2017" /><published>2017-09-27T00:00:00+05:30</published><updated>2017-09-27T00:00:00+05:30</updated><id>http://localhost:4000/events/xlr8</id><content type="html" xml:base="http://localhost:4000/events/xlr82017">&lt;p&gt;XLR8 is the the first Technical Competition of the Academic year.  The primary task is to build a manually controlled bot capable of negotiating different kinds of obstacles in its path in stipulated amount of time. The team which completes the task in minimum amount of time wins. There are also prizes for other aspects of the competition.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;font color=&quot;f44336&quot;&gt;Don’t get intimidated by seeing these components. We’ll have sessions arranged before the competition to guide you through every step of the competition. Mentors will also be allotted to help and guide you.&lt;/font&gt;&lt;/p&gt;

&lt;h1 id=&quot;register-link&quot;&gt;REGISTER LINK&lt;/h1&gt;
&lt;h3&gt;&lt;font color=&quot;#b71c1c&quot;&gt; Registeration Closed &lt;/font&gt;&lt;/h3&gt;

&lt;h1 id=&quot;problem-statement&quot;&gt;PROBLEM STATEMENT&lt;/h1&gt;
&lt;p&gt;Shown below is last year’s Problem Statement.&lt;/p&gt;
&lt;center&gt;
&lt;iframe src=&quot;http://localhost:4000/assets/event/XLR8//problem_statement.pdf&quot; width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;p&gt;The essence of the Problem Statement would remain intact albeit some tweaks can be introduced&lt;/p&gt;

&lt;h1 id=&quot;link-to-the-tutorial&quot;&gt;LINK TO THE TUTORIAL&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:4000/blog/XLR8&quot;&gt; CLICK HERE &lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;demo-video&quot;&gt;DEMO VIDEO&lt;/h1&gt;
&lt;video width=&quot;800&quot; height=&quot;600&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;http://localhost:4000/assets/event/XLR8//xlr8_demo.mp4&quot; type=&quot;video/mp4&quot; /&gt;
Your browser does not support the video tag.
&lt;/video&gt;</content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="xlr8" /><category term="event" /><summary type="html">Dive into the World of Technology!</summary></entry><entry><title type="html">IOT Introduction</title><link href="http://localhost:4000/events/iot" rel="alternate" type="text/html" title="IOT Introduction" /><published>2017-09-27T00:00:00+05:30</published><updated>2017-09-27T00:00:00+05:30</updated><id>http://localhost:4000/events/iot</id><content type="html" xml:base="http://localhost:4000/events/iot"></content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="iot" /><category term="event" /><summary type="html">Making life easier.....</summary></entry><entry><title type="html">GET MECHANISED</title><link href="http://localhost:4000/events/get_mechanised" rel="alternate" type="text/html" title="GET MECHANISED" /><published>2017-08-16T00:00:00+05:30</published><updated>2017-08-16T00:00:00+05:30</updated><id>http://localhost:4000/events/get-mechanised</id><content type="html" xml:base="http://localhost:4000/events/get_mechanised"></content><author><name>Parth Patil</name></author><category term="[&quot;event&quot;]" /><category term="get mechanised" /><summary type="html">Teaching the basic mechanics of robotics!</summary></entry><entry><title type="html">Get Electrified 3</title><link href="http://localhost:4000/blog/informative/get-electrified-3/" rel="alternate" type="text/html" title="Get Electrified 3" /><published>2017-04-24T00:00:00+05:30</published><updated>2017-04-24T00:00:00+05:30</updated><id>http://localhost:4000/blog/informative/get-electrified-3</id><content type="html" xml:base="http://localhost:4000/blog/informative/get-electrified-3/">&lt;p&gt;Electronics club conducted its last electrified session on 18th March, 2017. It was totally awesome as we got an opportunity to make a half adder, full adder, subtractor and priority encoder. Along with that we also learnt some cool stuff about digital circuits.&lt;/p&gt;

&lt;p&gt;##Where do we begin from to make anything as simple as an adder?&lt;/p&gt;

&lt;p&gt;We basically use a combinational circuit. Not only an adder but we can even make a subtractor, priority encoder, MUX and what not!&lt;/p&gt;

&lt;p&gt;Combinational circuit is basically used for making those circuits which depends on the current state.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_0.png&quot; alt=&quot;Combinational Logic Circuits&quot; /&gt;&lt;/p&gt;

&lt;p&gt;##So, let us now begin with how exactly do these combinational circuits function:&lt;/p&gt;

&lt;h2 id=&quot;adder&quot;&gt;Adder:&lt;/h2&gt;

&lt;p&gt;As you can guess an adder simply add two numbers. But why do we need a complicated circuit to just add numbers? Actually, adders are used in the arithmetic logic units in many computers and other kinds of processors.&lt;/p&gt;

&lt;p&gt;There are two kinds of adders:&lt;/p&gt;

&lt;h3 id=&quot;half-adder&quot;&gt;1) Half adder&lt;/h3&gt;

&lt;h3 id=&quot;full-adder&quot;&gt;2) Full adder&lt;/h3&gt;

&lt;p&gt;The major difference between a half adder and a full adder is that a full-adder has three inputs and two outputs where as a half adder has only two inputs and two outputs. In a full adder, the first two inputs are A and B and the third input is an input carry.&lt;/p&gt;

&lt;p&gt;The circuit diagram and truth table of a half adder and full adder is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_1.png&quot; alt=&quot;Half Adder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_2.png&quot; alt=&quot;Full Adder&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;subtractor&quot;&gt;Subtractor:&lt;/h2&gt;

&lt;p&gt;Similarly, a subtractor subtracts two numbers. They are also of two types and as you can guess the two types are:&lt;/p&gt;

&lt;h3 id=&quot;half-subtractor&quot;&gt;1) Half subtractor&lt;/h3&gt;

&lt;h3 id=&quot;full-subtractor&quot;&gt;2) Full subtractor&lt;/h3&gt;

&lt;p&gt;Just like in an adder, the subtractor has similar inputs just the difference is that instead of a carry we have a “borrow”.&lt;/p&gt;

&lt;p&gt;The circuit diagram and truth table of a half subtractor and full subtractor is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_3.png&quot; alt=&quot;Half Subtractor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_4.png&quot; alt=&quot;Full Subtractor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;priority-encoder&quot;&gt;Priority Encoder:&lt;/h2&gt;

&lt;p&gt;So basically, what a priority encoder do is that it gives the highest priority of the current input as an output. So, when an input with a higher priority is present, all other inputs with a lower priority will be ignored. The priority encoder comes in many different forms with an example of an 8-input priority encoder along with its truth table shown below.&lt;/p&gt;

&lt;h2 id=&quot;to-3-bit-priority-encoder&quot;&gt;8-to-3 Bit Priority Encoder:&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_5.png&quot; alt=&quot;8 to 3 bit Priority Encoder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Where X equals “don’t care”, that is it can be either logic “0” or logic “1”.&lt;/p&gt;

&lt;h2 id=&quot;multiplexer-mux-and-demultiplexer&quot;&gt;Multiplexer (MUX) and Demultiplexer:&lt;/h2&gt;

&lt;h2 id=&quot;how-are-multiple-signals-combined&quot;&gt;How are multiple signals combined?&lt;/h2&gt;

&lt;p&gt;MUX is used for this purpose. It has N Select lines, 2N input lines, and it routes one of the input lines to the output. Conceptually, a MUX may be thought of as 2N switches. For a given combination of the select inputs, only one of the switches closes (makes contact), and the others are open.&lt;/p&gt;

&lt;p&gt;It is obvious from the name that a demultiplexer do the reverse of what a multiplexer do. It takes a single input (I) and routes it to one of the output lines. For N Select inputs, the number of output lines is 2^N.&lt;/p&gt;

&lt;p&gt;Circuit diagram and truth table of a multiplexer is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_6.png&quot; alt=&quot;4:1 Multiplexer&quot; /&gt;  &lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_7.png&quot; alt=&quot;Truth Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Circuit diagram and truth table of a demultiplexer is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_8.png&quot; alt=&quot;1:4 Demultiplexer&quot; /&gt;  &lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_9.png&quot; alt=&quot;Truth Table&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;encoders-and-decoders&quot;&gt;Encoders and Decoders:&lt;/h2&gt;

&lt;p&gt;You might be wondering what is the need of an encoder?&lt;/p&gt;

&lt;p&gt;It is actually used to convert information from one format to another for the purpose of standardization, speed and compressions.&lt;/p&gt;

&lt;p&gt;In encoders, only one input line is assumed to be active. The binary number corresponding to the active input line appears at the output pins. The N output lines can represent 2N binary numbers, each corresponding to one of the M input lines, i.e., we can have M = 2N. Some encoders have M &amp;lt; 2 N.&lt;/p&gt;

&lt;p&gt;Similarly, you can guess the functioning of a decoder. For each input combination, only one output line is active (which means 0 or 1, depending on whether the outputs are active low or active high). Since there are 2N input combinations, there could be 2N output lines, i.e., M = 2N. However, there are decoders with M &amp;lt; 2 N as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_10.png&quot; alt=&quot;Encoder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/blog/get-electrified-3/image_11.png&quot; alt=&quot;Decoder&quot; /&gt;&lt;/p&gt;</content><author><name>Mayanka Medhe</name></author><category term="[&quot;Informative&quot;]" /><category term="Digital Electronics" /><category term="Adder" /><category term="MUX" /><summary type="html">Tinkering with Digital Electronics!</summary></entry><entry><title type="html">Experiences with Robotic Arm</title><link href="http://localhost:4000/blog/robotic_arm/" rel="alternate" type="text/html" title="Experiences with Robotic Arm" /><published>2016-12-20T00:00:00+05:30</published><updated>2016-12-20T00:00:00+05:30</updated><id>http://localhost:4000/blog/robotic_arm</id><content type="html" xml:base="http://localhost:4000/blog/robotic_arm/">&lt;p&gt;We organised a session on Grippers where enthusiastic freshers participated in an overnight hackathon which was preceded by Tutorial for the same in Tinkerers Laboratory,IIT Bombay.  
Here is a blog post by one such team which participated in the event and successfully completed the Gripper.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;center-team-hifi&quot;&gt;&lt;center&gt; Team HIFI&lt;/center&gt;&lt;/h1&gt;
&lt;center&gt; - Maitrey Gramopadhye, Swadha Sanghvi, Bhuyashi Deka, Vikrant Nagpure

&lt;img src=&quot;http://localhost:4000/assets/blog/Gripper/roboarm.jpg&quot; alt=&quot;team&quot; /&gt;

&lt;p&gt;
All at least once we've tried opening up clocks in our house or the batteries of our mobile. Well, to satisfy this techie spirit a gripper bot session was held on 23 November. we had been waiting to get our Xlr8 bots out of our cupboards and and do more with them as our mentors had promised we would. The tech nightout held in tinker's lab started at 9 pm. Mentors were very enthusiastic about explaining the concept of grippers and having attended the get mechanised and get electrified session it wasn't hard to get started.
&lt;/p&gt;
&lt;p&gt;
We first set to the planning of the steps to take. After half an hour of debating we decided on making the gripper attached with gears which were rotated by a worm gear, and to attach this gripper mechanism on a ramp, which could move the gripper up and down, which would be on our xlr8 bots. the movement of the gripper, ramp and the bot itself was to be controlled by giving commands from a laptop to an arduino.
&lt;/p&gt;
&lt;p&gt;
Starting the work on the gripper we first thought of attaching a 10 rpm motor to the worm gear, but that gave us an angular velocity of 1 rotation per 2.4 minutes with the gripper. so we switched to a 150 rpm motor. Next we had to decide the shape of the gripper arm setup and attach it to the spur gears.
&lt;/p&gt;
&lt;p&gt;
Based on a youtube video we chose to have 4 wooden planks in each arm with a setup such that the forward most arm is always pointing in the forward direction. Then to attach the arms to gears we drilled holes in the arms and fitted them to the gears with 5 mm screws, which stayed together by friction.    
&lt;/p&gt;
&lt;p&gt;
To fix the worm gear on the motor was a major task, as we had to use a pointed screw to avoid the relative motion of the shaft of motor with gear, but even after that the gear didn't rotate along an axis parallel to the shaft. due to this the spur gears experienced an upward force and bounced out of the screws of which they were attached. we relied once again on friction to resolve this issue and thickened the screws by covering them with tape.    
&lt;/p&gt;
&lt;p&gt;
Now having almost completed the gripper we set to work on the ramp. It's called a ramp here because it moved like one. We fitted a rack on it's lower side and a 10 rpm on surface of the bot to move the ramp.In this way the ramp moved forward when it moved up and back when it moved down. To keep it guided along a straight path we attached two small rods on either side of the ramp to support its motion.    
&lt;/p&gt;
&lt;p&gt;
After finishing the mechanical aspect of the project it was time to bring the gripper to life and attach the arduino. Choosing to stick as close to the Xlr8 setup as possible we kept the circuit for motion of the bot intact and built another like it for the ramp and the gripper. here the motors were attached to L293D and it to the arduino via an 7806.    
&lt;/p&gt;
&lt;p&gt;
In the code of the arduino were 8 commands, forward, back, right and left to control the bot, up and down to control the ramp and open and close to control the gripper. the working principle was simply pin high and pin low, of the motors.     
&lt;/p&gt;
&lt;p&gt;
Our next move would now be to sort out the few things still out of shape. We have thought of trying to attach the worm gear to the motor by glue as then it might align parallel to it. Also by installing a bluetooth module in the circuit the bot will no longer be needed to be wired.    
&lt;/p&gt;
&lt;p&gt;
Overall, spending 4 days and 5 nights in TL, putting the post Endsem lukkha to tech were worth it. the best part was seeing the bot actually work.    
&lt;/p&gt;
&lt;p&gt;
We would like to thank our mentors and technicians of TL for helping us through it.    
&lt;/p&gt;
Cheers!
&lt;/center&gt;</content><author><name>Maitrey Gramopadhye, Swadha Sanghvi, Bhuyashi Deka, Vikrant Nagpure</name></author><category term="blog" /><category term="Gripper" /><category term="Automation" /><category term="Arduino" /><summary type="html">We organised a session on Grippers where enthusiastic freshers participated in an overnight hackathon which was preceded by Tutorial for the same in Tinkerers Laboratory,IIT Bombay.  
Here is a blog post by one such team which participated in the event and successfully completed the Gripper.</summary></entry></feed>
